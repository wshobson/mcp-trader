name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12"]
        exclude:
          # TA-Lib can be tricky on Windows, so we'll only test on one Python version
          - os: windows-latest
            python-version: "3.11"

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "latest"
        enable-cache: true
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install TA-Lib (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz
        tar -xzf ta-lib-0.4.0-src.tar.gz
        cd ta-lib/
        ./configure --prefix=/usr
        make
        sudo make install
        sudo ldconfig
    
    - name: Install TA-Lib (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install ta-lib
    
    - name: Install TA-Lib (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Download pre-built TA-Lib
        Invoke-WebRequest -Uri "http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-msvc.zip" -OutFile "ta-lib.zip"
        Expand-Archive -Path "ta-lib.zip" -DestinationPath "C:\"
        # Set environment variables for the build
        echo "TA_INCLUDE_PATH=C:\ta-lib\c\include" >> $env:GITHUB_ENV
        echo "TA_LIBRARY_PATH=C:\ta-lib\c\lib" >> $env:GITHUB_ENV
      shell: pwsh
    
    - name: Install dependencies
      run: |
        uv pip install -e .
        uv pip install --group test
    
    - name: Run tests
      run: |
        uv run pytest -v --cov=mcp_trader --cov-report=xml --cov-report=term
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false